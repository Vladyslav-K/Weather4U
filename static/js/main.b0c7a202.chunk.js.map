{"version":3,"sources":["components/Info/polygon.jpg","components/Styled/index.js","components/Info/index.js","components/Input/index.js","components/Weather/index.js","API_KEY.js","App.js","index.js"],"names":["module","exports","Wrapper","styled","div","Main","Form","InfoContainer","img","Info","InputContent","input","Button","button","form","Input","props","onSubmit","weatherMethod","type","name","placeholder","Container","WeatherContainer","Error","p","Weather","className","city","country","temp","pressure","sunset","error","API_KEY","App","state","undefined","gettingWeather","e","a","async","preventDefault","target","elements","value","fetch","api_url","json","data","sys","date","Date","setTime","sunset_date","getHours","getMinutes","getSeconds","setState","main","this","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,qC,u7DCE3C,IAAMC,EAAUC,IAAOC,IAAV,KAyCPC,EAAOF,IAAOC,IAAV,KAiBJE,EAAOH,IAAOC,IAAV,K,oxBCxDV,IAAMG,EAAgBJ,IAAOC,IAAV,IASCI,KA2CLC,EATF,kBACX,kBAACF,EAAD,KACE,6BACE,yCACA,0E,86BChDN,IAAMG,EAAeP,IAAOQ,MAAV,KAsBZC,EAAST,IAAOU,OAAV,KAyBNP,EAAOH,IAAOW,KAAV,KAoBKC,EAXD,SAAAC,GAAK,OACjB,kBAAC,EAAD,CAAMC,SAAUD,EAAME,eACpB,kBAACR,EAAD,CACES,KAAK,OACLC,KAAK,OACLC,YAAY,+BAEd,kBAACT,EAAD,uB,4nBC/DJ,IAAMU,EAAYnB,IAAOC,IAAV,KAWTmB,EAAmBpB,IAAOC,IAAV,KAiBhBoB,EAAQrB,IAAOsB,EAAV,KAuBIC,EAjBC,SAAAV,GAAK,OACnB,kBAACM,EAAD,CAAWK,UAAU,mBAClBX,EAAMY,MACL,kBAACL,EAAD,KACE,2BACG,IADH,aAEaP,EAAMY,KAFnB,KAE2BZ,EAAMa,QAAS,KAE1C,4CAAkBb,EAAMc,KAAxB,YACA,yCAAed,EAAMe,SAArB,KACA,uCAAaf,EAAMgB,OAAnB,SAGJ,kBAACR,EAAD,CAAOG,UAAU,SAAjB,IAA2BX,EAAMiB,MAAjC,OClDSC,EAAU,mCCmERC,E,2MA3DbC,MAAQ,CACNN,UAAMO,EACNT,UAAMS,EACNR,aAASQ,EACTN,cAAUM,EACVL,YAAQK,EACRJ,WAAOI,G,EAGTC,eAAiB,SAAMC,GAAN,yBAAAC,EAAAC,OAAA,mDACfF,EAAEG,mBACId,EAAOW,EAAEI,OAAOC,SAAShB,KAAKiB,OAFrB,mCAAAL,EAAA,MAKSM,MAAM,qDAAD,OAC4BlB,EAD5B,kBAC0CM,EAD1C,mBALd,cAKPa,EALO,kBAAAP,EAAA,MAQMO,EAAQC,QARd,OAQPC,EARO,OAUTjB,EAASiB,EAAKC,IAAIlB,QAClBmB,EAAO,IAAIC,MACVC,QAAQrB,GACTsB,EACFH,EAAKI,WAAa,IAAMJ,EAAKK,aAAe,IAAML,EAAKM,aACzD,EAAKC,SAAS,CACZ5B,KAAMmB,EAAKU,KAAK7B,KAChBF,KAAMqB,EAAK7B,KACXS,QAASoB,EAAKC,IAAIrB,QAClBE,SAAUkB,EAAKU,KAAK5B,SACpBC,OAAQsB,EACRrB,WAAOI,IArBI,wBAwBb,EAAKqB,SAAS,CACZ5B,UAAMO,EACNT,UAAMS,EACNR,aAASQ,EACTN,cAAUM,EACVL,YAAQK,EACRJ,MAAO,+BA9BI,uC,wEAoCf,OACE,kBAAC/B,EAAD,CAASyB,UAAU,WACjB,kBAACtB,EAAD,CAAMsB,UAAU,QACd,kBAAC,EAAD,CAAMA,UAAU,SAChB,kBAACrB,EAAD,CAAMqB,UAAU,QACd,kBAAC,EAAD,CAAOT,cAAe0C,KAAKtB,eAAgBX,UAAU,UACrD,kBAAC,EAAD,iBAAaiC,KAAKxB,MAAlB,CAAyBT,UAAU,oB,GApD7BkC,aCFZC,G,MAAcC,SAASC,eAAe,SAC5CC,IAASC,OAAO,kBAAC,EAAD,MAASJ,K","file":"static/js/main.b0c7a202.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/polygon.d0323d9d.jpg\";","import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background: rgba(45, 176, 224, 1);\n  background: -moz-linear-gradient(\n    45deg,\n    rgba(45, 176, 224, 1) 0%,\n    rgba(96, 40, 168, 1) 100%\n  );\n  background: -webkit-gradient(\n    left bottom,\n    right top,\n    color-stop(0%, rgba(45, 176, 224, 1)),\n    color-stop(100%, rgba(96, 40, 168, 1))\n  );\n  background: -webkit-linear-gradient(\n    45deg,\n    rgba(45, 176, 224, 1) 0%,\n    rgba(96, 40, 168, 1) 100%\n  );\n  background: -o-linear-gradient(\n    45deg,\n    rgba(45, 176, 224, 1) 0%,\n    rgba(96, 40, 168, 1) 100%\n  );\n  background: -ms-linear-gradient(\n    45deg,\n    rgba(45, 176, 224, 1) 0%,\n    rgba(96, 40, 168, 1) 100%\n  );\n  background: linear-gradient(\n    45deg,\n    rgba(45, 176, 224, 1) 0%,\n    rgba(96, 40, 168, 1) 100%\n  );\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#2db0e0', endColorstr='#6028a8', GradientType=1 );\n`;\n\nconst Main = styled.div`\n  display: flex;\n\n  height: 90vh;\n  width: 90vw;\n\n  margin: 0 auto;\n\n  background-color: #2a6bb1;\n\n  box-shadow: 0px 2px 80px -20px rgba(0, 0, 0, 0.5);\n\n  @media screen and (max-width: 950px) {\n    flex-direction: column;\n  }\n`;\n\nconst Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n\n  height: 100%;\n  width: 50%;\n\n  border-top: 2px solid #113a65;\n  border-bottom: 2px solid #113a65;\n  border-right: 2px solid #113a65;\n\n  @media screen and (max-width: 950px) {\n    height: 50%;\n    width: 100%;\n  }\n`;\n\nexport { Wrapper, Main, Form };\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport img from \"./polygon.jpg\";\n\nconst InfoContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n\n  height: 100%;\n  width: 50%;\n\n  background: url(${img});\n  background-blend-mode: multiply;\n  background-color: #484747;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center center;\n\n  border: 2px solid #1f1f1f;\n  border-right: 2px solid #131e29;\n\n  color: #000;\n\n  & h2 {\n    font-size: 3rem;\n    color: #fff;\n    padding-bottom: 1rem;\n  }\n\n  & p {\n    color: #e4e4e4;\n    font-weight: bold;\n  }\n\n  @media screen and (max-width: 950px) {\n    height: 50%;\n    width: 100%;\n\n    & h2 {\n      font-size: 2rem;\n      color: #fff;\n    }\n  }\n`;\n\nconst Info = () => (\n  <InfoContainer>\n    <div>\n      <h2>Weather4U</h2>\n      <p>Find out about the weather in your city!</p>\n    </div>\n  </InfoContainer>\n);\n\nexport default Info;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst InputContent = styled.input`\n  height: 3rem;\n\n  font-size: 1rem;\n  font-weight: lighter;\n  outline: none;\n  color: #fff;\n\n  border: 0;\n  border-bottom: solid 2px #113a65;\n\n  margin-right: 1.25rem;\n  padding-bottom: 4px;\n\n  background-color: transparent;\n\n  ::placeholder {\n    font-size: 1rem;\n    color: #adcbb8;\n  }\n`;\n\nconst Button = styled.button`\n  opacity: 1;\n\n  font-size: 1.5rem;\n\n  padding: 8px 20px;\n  margin: 0 2px;\n\n  border: 2px solid #103a65;\n  border-radius: 2px;\n\n  cursor: pointer;\n\n  background-color: #235d9c;\n  color: #fff;\n\n  :hover {\n    opacity: 0.8;\n  }\n\n  @media screen and (max-width: 768px) {\n    font-size: 1rem;\n  }\n`;\n\nconst Form = styled.form`\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n\n  height: 30%;\n  width: 100%;\n`;\n\nconst Input = props => (\n  <Form onSubmit={props.weatherMethod}>\n    <InputContent\n      type=\"text\"\n      name=\"city\"\n      placeholder=\"Enter the name of the city\"\n    />\n    <Button>Show weather</Button>\n  </Form>\n);\n\nexport default Input;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  height: 70%;\n  width: 100%;\n\n  color: #fff;\n`;\n\nconst WeatherContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n\n  & p {\n    margin: 1rem;\n    font-size: 1.5rem;\n  }\n\n  @media screen and (max-width: 768px) {\n    & p {\n      font-size: 1rem;\n    }\n  }\n`;\n\nconst Error = styled.p`\n  color: rgb(190, 190, 190);\n  font-weight: bold;\n  font-size: 2rem;\n`;\n\nconst Weather = props => (\n  <Container className=\"weather-content\">\n    {props.city && (\n      <WeatherContainer>\n        <p>\n          {\" \"}\n          Location: {props.city}, {props.country}{\" \"}\n        </p>\n        <p> Temperature: {props.temp}\tâ„ƒ </p>\n        <p> Pressure: {props.pressure} </p>\n        <p> Sunset: {props.sunset} AM </p>\n      </WeatherContainer>\n    )}\n    <Error className=\"error\"> {props.error} </Error>\n  </Container>\n);\n\nexport default Weather;\n","export const API_KEY = \"975786e4db431944c7fb1b2a679d8733\";","import React, { Component } from \"react\";\nimport { Wrapper, Main, Form } from \"./components/Styled\";\nimport Info from \"./components/Info\";\nimport Input from \"./components/Input\";\nimport Weather from \"./components/Weather\";\nimport { API_KEY } from \"./API_KEY\";\n\nclass App extends Component {\n  state = {\n    temp: undefined,\n    city: undefined,\n    country: undefined,\n    pressure: undefined,\n    sunset: undefined,\n    error: undefined\n  };\n\n  gettingWeather = async e => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n\n    if (city) {\n      const api_url = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\n      );\n      const data = await api_url.json();\n\n      let sunset = data.sys.sunset;\n      let date = new Date();\n      date.setTime(sunset);\n      let sunset_date =\n        date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n      this.setState({\n        temp: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        pressure: data.main.pressure,\n        sunset: sunset_date,\n        error: undefined\n      });\n    } else {\n      this.setState({\n        temp: undefined,\n        city: undefined,\n        country: undefined,\n        pressure: undefined,\n        sunset: undefined,\n        error: \"Enter the name of the city\"\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Wrapper className=\"wrapper\">\n        <Main className=\"main\">\n          <Info className=\"info\" />\n          <Form className=\"form\">\n            <Input weatherMethod={this.gettingWeather} className=\"input\" />\n            <Weather {...this.state} className=\"weather\" />\n          </Form>\n        </Main>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\nimport './App.css';\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);"],"sourceRoot":""}